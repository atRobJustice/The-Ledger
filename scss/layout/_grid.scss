@use '../globals' as *;
@use "sass:math";

// Grid system
.container {
    width: 100%;
    padding-right: $spacing-md;
    padding-left: $spacing-md;
    margin-right: auto;
    margin-left: auto;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -$spacing-md;
    margin-left: -$spacing-md;
}

.col {
    flex: 1 0 0%;
    padding-right: $spacing-md;
    padding-left: $spacing-md;
}

// Responsive grid classes
@each $breakpoint, $width in (
    sm: $breakpoint-sm,
    md: $breakpoint-md,
    lg: $breakpoint-lg,
    xl: $breakpoint-xl
) {
    @include media-breakpoint-up($breakpoint) {
        .col-#{$breakpoint} {
            flex: 1 0 0%;
        }

        @for $i from 1 through 12 {
            .col-#{$breakpoint}-#{$i} {
                flex: 0 0 auto;
                width: math.percentage(math.div($i, 12));
            }
        }
    }
}

// Utility classes
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.justify-content-between {
    justify-content: space-between;
}

.align-items-center {
    align-items: center;
}

.flex-wrap {
    flex-wrap: wrap;
}

// Spacing utilities
@each $size, $value in (
    xs: $spacing-xs,
    sm: $spacing-sm,
    md: $spacing-md,
    lg: $spacing-lg,
    xl: $spacing-xl
) {
    .m-#{$size} { margin: $value; }
    .mt-#{$size} { margin-top: $value; }
    .mr-#{$size} { margin-right: $value; }
    .mb-#{$size} { margin-bottom: $value; }
    .ml-#{$size} { margin-left: $value; }
    .mx-#{$size} { 
        margin-left: $value;
        margin-right: $value;
    }
    .my-#{$size} {
        margin-top: $value;
        margin-bottom: $value;
    }

    .p-#{$size} { padding: $value; }
    .pt-#{$size} { padding-top: $value; }
    .pr-#{$size} { padding-right: $value; }
    .pb-#{$size} { padding-bottom: $value; }
    .pl-#{$size} { padding-left: $value; }
    .px-#{$size} {
        padding-left: $value;
        padding-right: $value;
    }
    .py-#{$size} {
        padding-top: $value;
        padding-bottom: $value;
    }
} 